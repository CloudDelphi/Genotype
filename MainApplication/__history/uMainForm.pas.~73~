unit uMainForm;
interface
{
Program:      Genotyp Projekt WAT.
File:         uMainForm
Description:  G³ówny plik aplikacji
Notes:
2018-03-10    Piotr Murawski  Rozpoczêcie projektu
}

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs,
  FMX.Controls.Presentation, FMX.StdCtrls, System.Rtti, FMX.Grid.Style,
  FMX.ScrollBox, FMX.Grid, System.Generics.Collections, Data.DB,
  Aurelius.Bind.BaseDataset, Aurelius.Bind.Dataset;

type
  TForm1 = class(TForm)
    Button1: TButton;
    PersonGrid: TGrid;
    StrColNazwisko: TStringColumn;
    StrColImie: TStringColumn;
    StrColIdentyfikator: TStringColumn;
    IdColIdentity: TIntegerColumn;
    Panel1: TPanel;
    StyleBook1: TStyleBook;
    procedure Button1Click(Sender: TObject);
    procedure PersonGridGetValue(Sender: TObject; const ACol, ARow: Integer;
      var Value: TValue);
    procedure PersonGridSetValue(Sender: TObject; const ACol, ARow: Integer;
      const Value: TValue);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure PersonGridCellDblClick(const Column: TColumn; const Row: Integer);
  private
    { Private declarations }
    A: array of array of TValue;
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation
uses uDB, Entities;

{$R *.fmx}

procedure TForm1.Button1Click(Sender: TObject);
var
  i:Int64;
  Osoba:TOsoba;
  OsobaList:TList<TOsoba>;
begin
  OsobaList:=DBConnection.Manager.Find<TOsoba>().List;
  PersonGrid.BeginUpdate;
  Persongrid.AutoCalculateContentSize:=true;
  SetLength(A, OsobaList.Count,PersonGrid.ColumnCount);
  PersonGrid.RowCount:=High(A)+1;
  try
    if OsobaList.Count>0 then
      begin
        i:=0;
        for Osoba in OsobaList do
          begin
            A[i][0] := Osoba.OsobaId.ToString;
            A[i][1] := Osoba.Nazwisko.ValueOrDefault;
            A[i][2] := Osoba.Imie.ValueOrDefault;
            A[i][3] := Osoba.Identyfikator.ValueOrDefault;
            inc(i);
          end;
      end;
  finally
     FreeAndNil(OsobaList);
  end;
  PersonGrid.EndUpdate;
end;

procedure TForm1.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  SetLength(A, 0,0);
end;

procedure TForm1.PersonGridCellDblClick(const Column: TColumn;
  const Row: Integer);
var
  sOsobaId:String;
  //OsobaId:Int64;
begin
  sOsobaId:=A[Row][0].AsString;
  ShowMessage('OsobaId: '+sOsobaId);
end;

procedure TForm1.PersonGridGetValue(Sender: TObject; const ACol, ARow: Integer;
  var Value: TValue);
begin
  if (PersonGrid.RowCount>0) and  (Length(A)> ARow) then
    Value := A[ARow][ACol];
end;

procedure TForm1.PersonGridSetValue(Sender: TObject; const ACol, ARow: Integer;
  const Value: TValue);
begin
  // Sets the value for a cell in the first column
  if (PersonGrid.RowCount>0) and (Length(A)> ARow) then
    A[ARow][ACol] := Value;
end;

end.
