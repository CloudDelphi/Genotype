{
Program:      Genotyp Projekt WAT.
File:         Entities
Description:  Obiekty mapowania bazy danych ORM
Notes:
2018-03-10    Piotr Murawski  Rozpoczêcie projektu
}
unit Entities;
interface


uses
  SysUtils, 
  Generics.Collections, 
  Aurelius.Mapping.Attributes, 
  Aurelius.Types.Blob, 
  Aurelius.Types.DynamicProperties, 
  Aurelius.Types.Nullable, 
  Aurelius.Types.Proxy, 
  Aurelius.Criteria.Dictionary;

type
  TOsoba = class;
  TOsobaTest = class;

  [Entity]
  [Table('Osoba')]
  [Id('FOsobaId', TIdGenerator.IdentityOrSequence)]
  TOsoba = class
  private
    [Column('OsobaId', [TColumnProp.Required, TColumnProp.NoInsert, TColumnProp.NoUpdate])]
    FOsobaId: Int64;

    [Column('Nazwisko', [], 100)]
    FNazwisko: Nullable<string>;

    [Column('Imie', [], 50)]
    FImie: Nullable<string>;

    [Column('Identyfikator', [], 50)]
    FIdentyfikator: Nullable<string>;

    [Column('Aktywny', [])]
    FAktywny: Nullable<Integer>;

    [Association([TAssociationProp.Lazy], CascadeTypeAll - [TCascadeType.Remove])]
    [JoinColumn('OsobaIdId', [], 'OsobaId')]
    FOsobaIdId: Proxy<TOsoba>;
    function GetOsobaIdId: TOsoba;
    procedure SetOsobaIdId(const Value: TOsoba);
  public
    property OsobaId: Int64 read FOsobaId write FOsobaId;
    property Nazwisko: Nullable<string> read FNazwisko write FNazwisko;
    property Imie: Nullable<string> read FImie write FImie;
    property Identyfikator: Nullable<string> read FIdentyfikator write FIdentyfikator;
    property Aktywny: Nullable<Integer> read FAktywny write FAktywny;
    property OsobaIdId: TOsoba read GetOsobaIdId write SetOsobaIdId;
  end;

[Entity]
  [Table('test_osoba')]
  [Id('Ftestid', TIdGenerator.None)]
  TOsobaTest = class
  private
    [Column('test_id', [TColumnProp.Required, TColumnProp.NoInsert, TColumnProp.NoUpdate])]
    Ftestid: Int64;

    [Column('test_login', [], 100)]
    Ftestlogin: Nullable<string>;

    [Column('test_haslo', [], 50)]
    Ftesthaslo: Nullable<string>;

    [Column('test_typ', [])]
    Ftesttyp: Nullable<Integer>;

  public
    property OsobaId: Int64 read Ftestid write Ftestid;
    property Nazwisko: Nullable<string> read Ftestlogin write Ftestlogin;
    property Imie: Nullable<string> read Ftesthaslo write Ftesthaslo;
    property Aktywny: Nullable<Integer> read Ftesttyp write Ftesttyp;
  end;


implementation

{ TOsoba }

function TOsoba.GetOsobaIdId: TOsoba;
begin
  result := FOsobaIdId.Value;
end;

procedure TOsoba.SetOsobaIdId(const Value: TOsoba);
begin
  FOsobaIdId.Value := Value;
end;

{ TDicDictionary }

initialization
  RegisterEntity(TOsoba);

finalization


end.
