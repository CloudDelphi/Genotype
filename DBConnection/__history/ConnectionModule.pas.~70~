unit ConnectionModule;

interface

uses
  Aurelius.Drivers.Interfaces,
  Aurelius.SQL.MySql,
  Aurelius.Schema.MySql,
  Aurelius.Drivers.FireDac,
  System.SysUtils, System.Classes;

type
  TFireDacMySQLConnection = class(TDataModule)
    Connection: TFDConnection;
  private
  public
    class function CreateConnection: IDBConnection;
    class function CreateFactory: IDBConnectionFactory;
  end;

implementation
{%CLASSGROUP 'System.Classes.TPersistent'}

uses
  Aurelius.Drivers.Base;

{$R *.dfm}

{ TMyConnectionModule }

class function TFireDacMySQLConnection.CreateConnection: IDBConnection;
var
  DataModule: TFireDacMySQLConnection;
begin
  DataModule := TFireDacMySQLConnection.Create(nil);
  Result := TFireDacConnectionAdapter.Create(DataModule.Connection, 'MySQL', DataModule);
end;

class function TFireDacMySQLConnection.CreateFactory: IDBConnectionFactory;
begin
  Result := TDBConnectionFactory.Create(
    function: IDBConnection
    begin
      Result := CreateConnection;
    end
  );
end;



end.