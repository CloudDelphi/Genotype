unit ConnectionModule;

interface

uses
  Aurelius.Drivers.Interfaces,
  Aurelius.SQL.MySQL,
  Aurelius.Schema.MySQL,
  Aurelius.Drivers.FireDac,
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys,
  Data.DB, FireDAC.Comp.Client,
  FireDAC.Phys.MySQL,
  FireDAC.Phys.MySQLDef,
  FireDAC.FMXUI.Wait,
  FireDAC.VCLUI.Wait;

type
  TFireDacMySQLConnection = class(TDataModule)
    Connection: TFDConnection;
  private
  public
    class function CreateConnection: IDBConnection;
    class function CreateFactory: IDBConnectionFactory;

  end;

implementation
{%CLASSGROUP 'FMX.Controls.TControl'}

uses
  Aurelius.Drivers.Base, System.UITypes;

{$R *.dfm}

{ TMyConnectionModule }

class function TFireDacMySQLConnection.CreateConnection: IDBConnection;
var
  DataModule: TFireDacMySQLConnection;
begin
  DataModule := TFireDacMySQLConnection.Create(nil);
  DataModule.Connection.Params.EndUpdate;
  Result := TFireDacConnectionAdapter.Create(DataModule.Connection, 'MySQL', DataModule);
end;

class function TFireDacMySQLConnection.CreateFactory: IDBConnectionFactory;
begin
  Result := TDBConnectionFactory.Create(
    function: IDBConnection
    begin
      Result := CreateConnection;
    end
  );
end;



end.
